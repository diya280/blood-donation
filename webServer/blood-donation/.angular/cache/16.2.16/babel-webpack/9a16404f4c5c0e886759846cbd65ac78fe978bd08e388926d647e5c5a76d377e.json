{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SignupComponent = class SignupComponent {\n  constructor(service, route) {\n    this.service = service;\n    this.route = route;\n    this.orgName = '';\n    this.contact = '';\n    this.email = '';\n    this.password = '';\n    this.confirmPassword = '';\n    this.streetAddress = '';\n    this.city = '';\n    this.district = '';\n    this.block = '';\n    this.zipCode = '';\n    this.state = '';\n  }\n  ngOnInit() {}\n  onSubmit(signupForm) {\n    // Validate form fields\n    if (!signupForm.valid) {\n      console.log('Form is invalid. Please correct the errors.');\n      return;\n    }\n    if (this.password !== this.confirmPassword) {\n      console.error('Passwords do not match.');\n      return;\n    }\n    const formData = {\n      orgName: this.orgName,\n      contact: this.contact,\n      email: this.email,\n      password: this.password,\n      streetAddress: this.streetAddress,\n      city: this.city,\n      district: this.district,\n      block: this.block,\n      zipCode: this.zipCode,\n      state: this.state\n    };\n    console.log('Form submitted successfully!', formData);\n    this.service.signupUser(formData).subscribe(re);\n    // Reset the form\n    signupForm.resetForm();\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})], SignupComponent);","map":{"version":3,"names":["Component","SignupComponent","constructor","service","route","orgName","contact","email","password","confirmPassword","streetAddress","city","district","block","zipCode","state","ngOnInit","onSubmit","signupForm","valid","console","log","error","formData","signupUser","subscribe","re","resetForm","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Touch\\Downloads\\New-Projects-Area\\web-projects\\Projects\\Projects\\blood-donation\\webServer\\blood-donation\\src\\app\\signup\\signup.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from '../auth-service.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  \nconstructor(private service: AuthServiceService,\n            private route: Router){ }\n\n  ngOnInit(): void {}\n\n\n  orgName: string = '';\n  contact: string = '';\n  email: string = '';\n  password: string = '';\n  confirmPassword: string = '';\n  streetAddress: string = '';\n  city: string = '';\n  district: string = '';\n  block: string = '';\n  zipCode: string = '';\n  state: string = '';\n\n  onSubmit(signupForm: any): void {\n    // Validate form fields\n    if (!signupForm.valid) {\n      console.log('Form is invalid. Please correct the errors.');\n      return;\n    }\n\n    if (this.password !== this.confirmPassword) {\n      console.error('Passwords do not match.');\n      return;\n    }\n\n    const formData = {\n      orgName: this.orgName,\n      contact: this.contact,\n      email: this.email,\n      password: this.password,\n      streetAddress: this.streetAddress,\n      city: this.city,\n      district: this.district,\n      block: this.block,\n      zipCode: this.zipCode,\n      state: this.state\n    };\n\n    console.log('Form submitted successfully!', formData);\n\n \n    this.service.signupUser(formData).subscribe((re))\n\n    // Reset the form\n    signupForm.resetForm();\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAE5BC,YAAoBC,OAA2B,EAC3BC,KAAa;IADb,KAAAD,OAAO,GAAPA,OAAO;IACP,KAAAC,KAAK,GAALA,KAAK;IAKvB,KAAAC,OAAO,GAAW,EAAE;IACpB,KAAAC,OAAO,GAAW,EAAE;IACpB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,eAAe,GAAW,EAAE;IAC5B,KAAAC,aAAa,GAAW,EAAE;IAC1B,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,OAAO,GAAW,EAAE;IACpB,KAAAC,KAAK,GAAW,EAAE;EAfgB;EAElCC,QAAQA,CAAA,GAAU;EAelBC,QAAQA,CAACC,UAAe;IACtB;IACA,IAAI,CAACA,UAAU,CAACC,KAAK,EAAE;MACrBC,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;MAC1D;;IAGF,IAAI,IAAI,CAACb,QAAQ,KAAK,IAAI,CAACC,eAAe,EAAE;MAC1CW,OAAO,CAACE,KAAK,CAAC,yBAAyB,CAAC;MACxC;;IAGF,MAAMC,QAAQ,GAAG;MACflB,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBE,aAAa,EAAE,IAAI,CAACA,aAAa;MACjCC,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,KAAK,EAAE,IAAI,CAACA;KACb;IAEDK,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEE,QAAQ,CAAC;IAGrD,IAAI,CAACpB,OAAO,CAACqB,UAAU,CAACD,QAAQ,CAAC,CAACE,SAAS,CAAEC,EAAG,CAAC;IAEjD;IACAR,UAAU,CAACS,SAAS,EAAE;EACxB;CACD;AArDY1B,eAAe,GAAA2B,UAAA,EAL3B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACW9B,eAAe,CAqD3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}