{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  signupUser(data) {\n    // const apiUrl: string = `http://localhost:8080/api/add/organisation`;\n    // return this.http.post(apiUrl, data)\n    fetch(`http://localhost:8080/api/add/organisation`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      if (data.status === 'Success') {\n        // Save token to local storage\n        localStorage.setItem('authToken', data.token);\n        console.log('Token saved:', data.token);\n        // Perform other actions, e.g., redirect to another page\n      } else {\n        console.error('Error:', data.message);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n  loginUser(data) {\n    const apiUrl = `http://localhost:8080/api/login/organisation`;\n    return this.http.post(apiUrl, data);\n  }\n  getLoginUser() {\n    const apiUrl = `http://localhost:8080/api/get/loginUser`;\n    return this.http.get(apiUrl);\n  }\n  static {\n    this.ɵfac = function AuthServiceService_Factory(t) {\n      return new (t || AuthServiceService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthServiceService,\n      factory: AuthServiceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthServiceService","constructor","http","signupUser","data","fetch","method","headers","then","response","json","status","localStorage","setItem","token","console","log","error","message","catch","loginUser","apiUrl","post","getLoginUser","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Touch\\Downloads\\New-Projects-Area\\web-projects\\Projects\\Projects\\blood-donation\\webServer\\blood-donation\\src\\app\\auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthServiceService {\n\nconstructor(private http: HttpClient ) { }\n\nsignupUser(data: any) {\n\n  // const apiUrl: string = `http://localhost:8080/api/add/organisation`;\n  // return this.http.post(apiUrl, data)\n\n\n  fetch(`http://localhost:8080/api/add/organisation`, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json',\n    },\n   \n})\n    .then(response => response.json())\n    .then(data => {\n        if (data.status === 'Success') {\n            // Save token to local storage\n            localStorage.setItem('authToken', data.token);\n            console.log('Token saved:', data.token);\n\n            // Perform other actions, e.g., redirect to another page\n        } else {\n            console.error('Error:', data.message);\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n    });\n\n}\n\n\nloginUser(data:any){\n  const apiUrl : string = `http://localhost:8080/api/login/organisation`;\n  return this.http.post(apiUrl, data)\n}\n\ngetLoginUser(){\n  const apiUrl : string = `http://localhost:8080/api/get/loginUser`;\n  return this.http.get(apiUrl)\n}\n\n\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAE/BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAiB;EAEzCC,UAAUA,CAACC,IAAS;IAElB;IACA;IAGAC,KAAK,CAAC,4CAA4C,EAAE;MAClDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;;KAGvB,CAAC,CACGC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACJ,IAAI,IAAG;MACT,IAAIA,IAAI,CAACO,MAAM,KAAK,SAAS,EAAE;QAC3B;QACAC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAET,IAAI,CAACU,KAAK,CAAC;QAC7CC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEZ,IAAI,CAACU,KAAK,CAAC;QAEvC;OACH,MAAM;QACHC,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEb,IAAI,CAACc,OAAO,CAAC;;IAE7C,CAAC,CAAC,CACDC,KAAK,CAACF,KAAK,IAAG;MACXF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC,CAAC,CAAC;EAEN;EAGAG,SAASA,CAAChB,IAAQ;IAChB,MAAMiB,MAAM,GAAY,8CAA8C;IACtE,OAAO,IAAI,CAACnB,IAAI,CAACoB,IAAI,CAACD,MAAM,EAAEjB,IAAI,CAAC;EACrC;EAEAmB,YAAYA,CAAA;IACV,MAAMF,MAAM,GAAY,yCAAyC;IACjE,OAAO,IAAI,CAACnB,IAAI,CAACsB,GAAG,CAACH,MAAM,CAAC;EAC9B;;;uBA5CarB,kBAAkB,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAlB5B,kBAAkB;MAAA6B,OAAA,EAAlB7B,kBAAkB,CAAA8B,IAAA;MAAAC,UAAA,EAHjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}