{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  signupUser(data) {\n    console.log('sign-up data', data);\n    const apiUrl = `http://localhost:8080/api/add/organisation`;\n    return this.http.post(apiUrl, jsonData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  loginUser(data) {\n    const apiUrl = `http://localhost:8080/api/login/organisation`;\n    return this.http.post(apiUrl, data);\n  }\n  getLoginUser() {\n    const apiUrl = `http://localhost:8080/api/get/loginUser`;\n    return this.http.get(apiUrl);\n  }\n  static {\n    this.ɵfac = function AuthServiceService_Factory(t) {\n      return new (t || AuthServiceService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthServiceService,\n      factory: AuthServiceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthServiceService","constructor","http","signupUser","data","console","log","apiUrl","post","jsonData","headers","loginUser","getLoginUser","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Touch\\Downloads\\New-Projects-Area\\web-projects\\Projects\\Projects\\blood-donation\\webServer\\blood-donation\\src\\app\\auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthServiceService {\n\nconstructor(private http: HttpClient ) { }\n\nsignupUser(data: any) {\n  console.log('sign-up data', data);\n  const apiUrl: string = `http://localhost:8080/api/add/organisation`;\n\n  return this.http.post(apiUrl, jsonData, {\n    headers: {\n      'Content-Type': 'application/json', \n    },\n  });\n}\n\n\nloginUser(data:any){\n  const apiUrl : string = `http://localhost:8080/api/login/organisation`;\n  return this.http.post(apiUrl, data)\n}\n\ngetLoginUser(){\n  const apiUrl : string = `http://localhost:8080/api/get/loginUser`;\n  return this.http.get(apiUrl)\n}\n\n\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAE/BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAiB;EAEzCC,UAAUA,CAACC,IAAS;IAClBC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,IAAI,CAAC;IACjC,MAAMG,MAAM,GAAW,4CAA4C;IAEnE,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAACD,MAAM,EAAEE,QAAQ,EAAE;MACtCC,OAAO,EAAE;QACP,cAAc,EAAE;;KAEnB,CAAC;EACJ;EAGAC,SAASA,CAACP,IAAQ;IAChB,MAAMG,MAAM,GAAY,8CAA8C;IACtE,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAACD,MAAM,EAAEH,IAAI,CAAC;EACrC;EAEAQ,YAAYA,CAAA;IACV,MAAML,MAAM,GAAY,yCAAyC;IACjE,OAAO,IAAI,CAACL,IAAI,CAACW,GAAG,CAACN,MAAM,CAAC;EAC9B;;;uBAxBaP,kBAAkB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAlBjB,kBAAkB;MAAAkB,OAAA,EAAlBlB,kBAAkB,CAAAmB,IAAA;MAAAC,UAAA,EAHjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}