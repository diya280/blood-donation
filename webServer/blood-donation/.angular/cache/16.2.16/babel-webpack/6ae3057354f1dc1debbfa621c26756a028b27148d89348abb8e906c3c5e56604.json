{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let NavbarComponent = class NavbarComponent {\n  constructor(service) {\n    this.service = service;\n    this.loginUser = [];\n    this.isModalOpen = false;\n  }\n  openModal() {\n    this.isModalOpen = true;\n  }\n  closeModal() {\n    this.isModalOpen = false;\n  }\n  ngOnInit() {\n    this.getUser();\n  }\n  getUser() {\n    this.service.getLoginUser().subscribe(res => {\n      console.log('res-data', res);\n      this.loginUser = res.data;\n    }, error => {\n      console.log('error in getting user', error);\n    });\n  }\n};\nNavbarComponent = __decorate([Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})], NavbarComponent);","map":{"version":3,"names":["Component","NavbarComponent","constructor","service","loginUser","isModalOpen","openModal","closeModal","ngOnInit","getUser","getLoginUser","subscribe","res","console","log","data","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Touch\\Downloads\\New-Projects-Area\\web-projects\\Projects\\Projects\\blood-donation\\webServer\\blood-donation\\src\\app\\navbar\\navbar.component.ts"],"sourcesContent":["import { Component , OnInit} from '@angular/core';\nimport { AuthServiceService } from '../auth-service.service';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit{\n\n  constructor(private service: AuthServiceService){}\n\n  loginUser: any[] =[];\n  isModalOpen = false;\n\n  openModal() {\n    this.isModalOpen = true;\n  }\n\n  closeModal() {\n    this.isModalOpen = false;\n  }\n\n  ngOnInit(): void {\n    this.getUser()\n  }\n\n  getUser(){\n    this.service.getLoginUser().subscribe((res:any)=>{\n      console.log('res-data', res)\n      this.loginUser = res.data\n    },(error:any)=>{\n      console.log('error in getting user', error)\n    })\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAE1BC,YAAoBC,OAA2B;IAA3B,KAAAA,OAAO,GAAPA,OAAO;IAE3B,KAAAC,SAAS,GAAS,EAAE;IACpB,KAAAC,WAAW,GAAG,KAAK;EAH8B;EAKjDC,SAASA,CAAA;IACP,IAAI,CAACD,WAAW,GAAG,IAAI;EACzB;EAEAE,UAAUA,CAAA;IACR,IAAI,CAACF,WAAW,GAAG,KAAK;EAC1B;EAEAG,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAA,OAAOA,CAAA;IACL,IAAI,CAACN,OAAO,CAACO,YAAY,EAAE,CAACC,SAAS,CAAEC,GAAO,IAAG;MAC/CC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,GAAG,CAAC;MAC5B,IAAI,CAACR,SAAS,GAAGQ,GAAG,CAACG,IAAI;IAC3B,CAAC,EAAEC,KAAS,IAAG;MACbH,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEE,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ;CAED;AA5BYf,eAAe,GAAAgB,UAAA,EAL3BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWnB,eAAe,CA4B3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}